// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PointOfSaleApp.Data.Entities;

namespace PointOfSaleApp.Data.Migrations
{
    [DbContext(typeof(PointOfSaleDbContext))]
    partial class PointOfSaleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("OfferOfferCategory", b =>
                {
                    b.Property<int>("OfferCategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("OffersId")
                        .HasColumnType("int");

                    b.HasKey("OfferCategoriesId", "OffersId");

                    b.HasIndex("OffersId");

                    b.ToTable("OfferOfferCategory");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OfferId = 1,
                            Price = 99.99m
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillType")
                        .HasColumnType("int");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillType = 0,
                            IsCancelled = false,
                            IssuedAt = new DateTime(2021, 1, 24, 14, 1, 9, 957, DateTimeKind.Local).AddTicks(2403),
                            Price = 199.99m
                        },
                        new
                        {
                            Id = 2,
                            BillType = 0,
                            IsCancelled = false,
                            IssuedAt = new DateTime(2021, 1, 24, 14, 1, 9, 962, DateTimeKind.Local).AddTicks(3549),
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 3,
                            BillType = 1,
                            IsCancelled = false,
                            IssuedAt = new DateTime(2021, 1, 24, 14, 1, 9, 962, DateTimeKind.Local).AddTicks(3590),
                            Price = 99.99m
                        },
                        new
                        {
                            Id = 4,
                            BillType = 2,
                            IsCancelled = false,
                            IssuedAt = new DateTime(2021, 1, 24, 14, 1, 9, 962, DateTimeKind.Local).AddTicks(3595),
                            Price = 100.59m
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.BillItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("OfferId");

                    b.ToTable("BillItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 1,
                            OfferId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            BillId = 2,
                            OfferId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            BillId = 2,
                            OfferId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            BillId = 3,
                            OfferId = 2,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 5,
                            BillId = 4,
                            OfferId = 3,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CreditCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreditCardNumber = "01920123",
                            FirstName = "Mladen",
                            LastName = "Mladenović",
                            PIN = "12345"
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DailyWorkingHours")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoginPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceHoursToDo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DailyWorkingHours = 8,
                            FirstName = "Pero",
                            LastName = "Perić",
                            LoginPassword = "dumptest",
                            PIN = "23456",
                            ServiceHoursToDo = 0
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferType")
                        .HasColumnType("int");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableQuantity = 20,
                            Description = "/",
                            Name = "Okvir karbonski - Giant",
                            OfferType = 0,
                            SoldQuantity = 0
                        },
                        new
                        {
                            Id = 2,
                            AvailableQuantity = 4,
                            Description = "/",
                            Name = "Popravak kvarova u mjenaču",
                            OfferType = 1,
                            SoldQuantity = 0
                        },
                        new
                        {
                            Id = 3,
                            AvailableQuantity = 2,
                            Description = "/",
                            Name = "Posudba MTB bicikala",
                            OfferType = 2,
                            SoldQuantity = 0
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.OfferCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OfferCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Božićne ponude"
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.OneOffBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("OneOffBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 1,
                            PickupTime = new DateTime(2021, 1, 24, 16, 16, 9, 962, DateTimeKind.Local).AddTicks(6498)
                        },
                        new
                        {
                            Id = 2,
                            BillId = 2,
                            PickupTime = new DateTime(2021, 2, 3, 14, 1, 9, 962, DateTimeKind.Local).AddTicks(7142)
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkingHoursNeeded")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OfferId = 2,
                            PricePerHour = 9.99m,
                            WorkingHoursNeeded = 2
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.ServiceBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ServiceBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 3,
                            EmployeeId = 1,
                            PickupTime = new DateTime(2021, 1, 24, 14, 46, 9, 962, DateTimeKind.Local).AddTicks(9374)
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OfferId = 3,
                            PricePerDay = 99.99m
                        });
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTerminated")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SubscriptionBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillId = 4,
                            CustomerId = 1,
                            IsTerminated = false
                        });
                });

            modelBuilder.Entity("OfferOfferCategory", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.OfferCategory", null)
                        .WithMany()
                        .HasForeignKey("OfferCategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Offer", null)
                        .WithMany()
                        .HasForeignKey("OffersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Article", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Articles")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.BillItem", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Bill", "Bill")
                        .WithMany("BillItems")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.OneOffBill", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Bill", "Bill")
                        .WithMany("OneOffBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Service", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Services")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.ServiceBill", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Bill", "Bill")
                        .WithMany("ServiceBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Employee", "Employee")
                        .WithMany("ServiceBills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Subscription", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Offer", "Offer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.SubscriptionBill", b =>
                {
                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Bill", "Bill")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PointOfSaleApp.Data.Entities.Models.Customer", "Customer")
                        .WithMany("SubscriptionBills")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Bill", b =>
                {
                    b.Navigation("BillItems");

                    b.Navigation("OneOffBills");

                    b.Navigation("ServiceBills");

                    b.Navigation("SubscriptionBills");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Customer", b =>
                {
                    b.Navigation("SubscriptionBills");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Employee", b =>
                {
                    b.Navigation("ServiceBills");
                });

            modelBuilder.Entity("PointOfSaleApp.Data.Entities.Models.Offer", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Services");

                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
